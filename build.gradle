buildscript {
    ext {
        kotlinVersion = '1.3.41'
        kotlinxVersion = '1.2.2'
        vertxVersion = '3.8.0'
        junitJupiterEngineVersion = '5.2.0'
        log4jVersion = '2.12.0'
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}

plugins {
    id 'java-library'
    //id "org.jetbrains.kotlin.jvm" version "1.3.41"
    id "org.jetbrains.kotlin.jvm"
    //id 'com.github.johnrengelman.shadow' version '5.1.0'
    id 'com.github.johnrengelman.shadow'
    //id 'application'
}

repositories {
    mavenLocal()
    jcenter()
}

group = 'cn.foperate'
version = '0.0.2'

sourceSets {
    main.kotlin.srcDirs += 'src/main/kotlin'
    main.java.srcDirs += 'src/main/java'
}

application {
    mainClassName = 'io.vertx.core.Launcher'
}

def mainVerticleName = 'cn.foperate.httpproxy.MainVerticle'
def watchForChange = 'src/**/*'
def doOnChange = './gradlew classes'

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinxVersion"

    implementation "io.vertx:vertx-core:$vertxVersion"
    implementation "io.vertx:vertx-web:$vertxVersion"
    implementation "io.vertx:vertx-redis-client:$vertxVersion"
    implementation "io.vertx:vertx-mysql-client:$vertxVersion" // 还是技术预览状态，暂时不用
    implementation "io.vertx:vertx-lang-kotlin:$vertxVersion"
    implementation "io.vertx:vertx-lang-kotlin-coroutines:$vertxVersion"

    compileOnly "io.vertx:vertx-codegen:$vertxVersion"

    implementation "commons-codec:commons-codec:1.11"
    implementation "com.google.guava:guava:27.0.1-jre"
    implementation "org.apache.logging.log4j:log4j-core:$log4jVersion"
    //implementation "org.apache.logging.log4j:log4j-api:2.12.0"
    implementation "org.apache.logging.log4j:log4j-jul:$log4jVersion"
    //implementation 'log4j:log4j:1.2.17'
    implementation 'com.alibaba:fastjson:1.2.59'

    implementation 'com.beust:jcommander:1.48'

    testImplementation "io.vertx:vertx-junit5:$vertxVersion"
    testRuntime("org.junit.jupiter:junit-jupiter-engine:$junitJupiterEngineVersion")
}

import org.jetbrains.kotlin.gradle.tasks.KotlinCompile
tasks.withType(KotlinCompile).all {
//compileKotlin {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    kotlinOptions {
        jvmTarget = "1.8"
        suppressWarnings = true
        // apiVersion = '1.3'
        // languageVersion = '1.3'
    }
}

shadowJar {
    classifier = 'all' // 表示在打包的最后加上all后缀
    manifest {
        attributes 'Main-Class': 'io.vertx.core.Launcher'
        attributes 'Main-Verticle': mainVerticleName
    }
    mergeServiceFiles {
        include 'META-INF/services/io.vertx.core.spi.VerticleFactory'
    }
    archiveName("proxy-all.jar")
}

test {
    useJUnitPlatform()
    testLogging {
        events 'PASSED', 'FAILED', 'SKIPPED'
    }
}

/*run {
    args = ['run', mainVerticleName, "--redeploy=$watchForChange", "--launcher-class=$mainClassName", "--on-redeploy=$doOnChange"]
}*/

/*task wrapper(type: Wrapper) {
    gradleVersion = "5.5.1"
}*/
